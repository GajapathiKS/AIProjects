{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AsyncPipe, DatePipe, NgFor, NgIf } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nimport { Component, inject } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProgramService } from '../services/program.service';\nlet StudentDetailPageComponent = class StudentDetailPageComponent {\n  constructor() {\n    this.route = inject(ActivatedRoute);\n    this.api = inject(ProgramService);\n    this.studentId = this.route.snapshot.paramMap.get('id');\n    this.student$ = this.api.getStudent(this.studentId);\n  }\n  latestProgress(student) {\n    const all = (student.goals || []).flatMap(g => g.progressUpdates || []);\n    if (!all.length) return null;\n    const latest = all.sort((a, b) => a.recordedAt < b.recordedAt ? 1 : -1)[0];\n    return latest?.recordedAt ?? null;\n  }\n};\nStudentDetailPageComponent = __decorate([Component({\n  standalone: true,\n  selector: 'app-student-detail-page',\n  imports: [NgIf, NgFor, AsyncPipe, ReactiveFormsModule, DatePipe, RouterLink],\n  template: `\n    <ng-container *ngIf=\"student$ | async as student\">\n      <div class=\"card student-overview\">\n        <h2>{{ student.firstName }} {{ student.lastName }}</h2>\n        <div class=\"overview-grid\">\n          <div><span>Local ID</span><strong>{{ student.localId }}</strong></div>\n          <div><span>Grade</span><strong>{{ student.gradeLevel }}</strong></div>\n          <div><span>Campus</span><strong>{{ student.campus }}</strong></div>\n          <div><span>Program Focus</span><strong>{{ student.programFocus || '—' }}</strong></div>\n          <div><span>Guardian Contact</span><strong>{{ student.guardianContact }}</strong></div>\n          <div><span>Enrollment</span><strong>{{ student.enrollmentDate | date }}</strong></div>\n          <div><span>Next Review</span><strong>{{ student.nextReviewDate | date:'shortDate' || 'TBD' }}</strong></div>\n        </div>\n      </div>\n      <div class=\"card stats\" aria-label=\"Student data summary\">\n        <div class=\"stat\"><span>Needs Assessments</span><strong>{{ student.needsAssessments?.length || 0 }}</strong></div>\n        <div class=\"stat\"><span>Goals</span><strong>{{ student.goals?.length || 0 }}</strong></div>\n        <div class=\"stat\"><span>Latest Progress</span><strong>{{ latestProgress(student) || '—' }}</strong></div>\n      </div>\n    </ng-container>\n\n    <nav class=\"card student-nav\" *ngIf=\"studentId as id\">\n      <a [routerLink]=\"['/students', id, 'needs']\">Needs</a>\n      <a [routerLink]=\"['/students', id, 'assignments']\">Assignments</a>\n      <a [routerLink]=\"['/students', id, 'goals']\">Goals</a>\n      <a [routerLink]=\"['/students', id, 'progress']\">Progress</a>\n      <a [routerLink]=\"['/students', id, 'assignments', 'new']\">New Assignment</a>\n    </nav>\n  `,\n  styles: [`\n    textarea {\n      min-height: 80px;\n      width: 100%;\n      padding: 0.5rem;\n      border: 1px solid #b5c7e7;\n      border-radius: 4px;\n      font-family: inherit;\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    li {\n      background: #f7f9ff;\n      padding: 0.75rem;\n      border-radius: 6px;\n      margin-bottom: 0.75rem;\n    }\n    .goal {\n      margin-bottom: 1.5rem;\n    }\n    .grid {\n      display: grid;\n      gap: 1rem;\n      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n    }\n    form {\n      display: flex;\n      flex-direction: column;\n      gap: 0.75rem;\n      margin-bottom: 1rem;\n    }\n    .status {\n      display: flex;\n      gap: 0.75rem;\n      align-items: flex-end;\n    }\n    .status button {\n      align-self: center;\n    }\n    .tag {\n      display: inline-block;\n      margin-top: 0.25rem;\n      background: #e4edff;\n      padding: 0.25rem 0.5rem;\n      border-radius: 999px;\n      font-size: 0.75rem;\n      color: #274684;\n    }\n    .overview-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n      gap: 0.75rem;\n    }\n    .overview-grid span {\n      display: block;\n      font-size: 0.75rem;\n      color: #5c6f92;\n    }\n    .overview-grid strong {\n      font-size: 1rem;\n    }\n    .stats {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));\n      gap: 0.75rem;\n    }\n    .stat span { display:block; font-size: .75rem; color:#5c6f92; }\n    .stat strong { font-size:1.25rem; }\n    .student-nav { display:flex; gap:.75rem; flex-wrap: wrap; margin-top: .5rem; }\n    .student-nav a { padding:.5rem .75rem; background:#f7f9ff; border:1px solid #b5c7e7; border-radius:6px; color:#274684; text-decoration:none; }\n    .student-nav a:hover { background:#eaf1ff; }\n  `]\n})], StudentDetailPageComponent);\nexport { StudentDetailPageComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}