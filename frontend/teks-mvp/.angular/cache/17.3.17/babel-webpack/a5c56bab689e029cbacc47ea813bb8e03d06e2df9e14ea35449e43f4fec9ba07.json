{"ast":null,"code":"import { inject } from '@angular/core';\nimport { NgFor, NgIf, AsyncPipe, DatePipe } from '@angular/common';\nimport { ProgramService } from '../services/program.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable, combineLatest, map, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nfunction ProgressPageComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"for student: \", ctx_r0.studentId, \"\");\n  }\n}\nfunction ProgressPageComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"small\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const u_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, u_r2.recordedAt, \"short\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(u_r2.summary);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(u_r2.recordedBy);\n  }\n}\nfunction ProgressPageComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ProgressPageComponent_div_4_div_1_Template, 8, 6, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const list_r3 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", list_r3);\n  }\n}\nfunction ProgressPageComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading progress\\u2026\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ProgressPageComponent = /*#__PURE__*/(() => {\n  class ProgressPageComponent {\n    constructor() {\n      this.api = inject(ProgramService);\n      this.route = inject(ActivatedRoute);\n      this.studentId = this.route.snapshot.paramMap.get('id') || undefined;\n      this.updates$ = (this.studentId ? this.api.getGoals(this.studentId) : this.api.getGoals('')).pipe(switchMap(goals => {\n        if (!goals || goals.length === 0) {\n          return new Observable(sub => {\n            sub.next([]);\n            sub.complete();\n          });\n        }\n        return combineLatest(goals.map(g => this.api.getProgress(g.id))).pipe(map(arr => arr.flat()));\n      }), map(list => list.sort((a, b) => a.recordedAt < b.recordedAt ? 1 : -1).map(u => ({\n        recordedAt: u.recordedAt,\n        summary: u.summary,\n        recordedBy: u.recordedBy\n      }))));\n    }\n    static {\n      this.ɵfac = function ProgressPageComponent_Factory(t) {\n        return new (t || ProgressPageComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ProgressPageComponent,\n        selectors: [[\"app-progress-page\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 8,\n        vars: 5,\n        consts: [[\"loading\", \"\"], [1, \"card\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"class\", \"update\", 4, \"ngFor\", \"ngForOf\"], [1, \"update\"]],\n        template: function ProgressPageComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"h2\");\n            i0.ɵɵtext(2, \"Progress Updates\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, ProgressPageComponent_p_3_Template, 2, 1, \"p\", 2)(4, ProgressPageComponent_div_4_Template, 2, 1, \"div\", 3);\n            i0.ɵɵpipe(5, \"async\");\n            i0.ɵɵtemplate(6, ProgressPageComponent_ng_template_6_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            const loading_r4 = i0.ɵɵreference(7);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.studentId);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 3, ctx.updates$))(\"ngIfElse\", loading_r4);\n          }\n        },\n        dependencies: [NgFor, NgIf, AsyncPipe, DatePipe],\n        encapsulation: 2\n      });\n    }\n  }\n  return ProgressPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}