{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { API_BASE } from '../api.config';\nimport { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor() {\n      this.http = inject(HttpClient);\n      this.auth$ = new BehaviorSubject(this.restore());\n      this.user$ = this.auth$.asObservable();\n    }\n    login(payload) {\n      return this.http.post(`${API_BASE}/api/auth/login`, payload).pipe(tap(res => {\n        this.auth$.next(res);\n        localStorage.setItem('teks-auth', JSON.stringify(res));\n      }));\n    }\n    logout() {\n      localStorage.removeItem('teks-auth');\n      this.auth$.next(null);\n    }\n    get token() {\n      return this.auth$.value?.token ?? null;\n    }\n    restore() {\n      const cached = localStorage.getItem('teks-auth');\n      return cached ? JSON.parse(cached) : null;\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}