metadata:
  title: Students journey with seed (MCP)
  description: |
    Login, seed a student via API using in-page fetch with bearer token, navigate to details,
    and visit Assignments, Goals, Progress, back to Info; mirror the Playwright E2E students.test.
  tags:
    - e2e
    - students
config:
  browser: chromium
  headless: true
  baseUrl: "{{environment.baseUrl}}"
steps:
  - navigate: "{{config.baseUrl}}/login"
  - fill:
      selector: 'input[formcontrolname="username"]'
      value: '{{secrets.username}}'
  - fill:
      selector: 'input[formcontrolname="password"]'
      value: '{{secrets.password}}'
  - click:
      selector: 'button[type="submit"]'
  - waitFor:
      selector: 'h1'
      text: 'Texas TEKS Program Manager'
  - evaluate:
      script: |
        async () => {
          // Obtain API token via login API (mirrors test seed util)
          async function getToken() {
            const base = 'https://localhost:7140';
            const creds = [
              { username: 'admin', password: 'ChangeMe123!' },
              { username: 'admin', password: 'ChangeMe123!' }
            ];
            for (const c of creds) {
              const r = await fetch(base + '/api/auth/login', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(c) });
              if (r.ok) { const j = await r.json(); return j.token || j.accessToken; }
            }
            throw new Error('Failed to obtain auth token');
          }
          const token = await getToken();
          // Seed one student
          const stamp = Date.now();
          const payload = {
            firstName: `mcp_${stamp}_First`,
            lastName: `mcp_${stamp}_Last`,
            dateOfBirth: '2012-01-15',
            gradeLevel: '5',
            campus: `mcp_${stamp}_Campus`,
            guardianContact: `mcp_${stamp}_Guardian`,
            programFocus: `mcp_${stamp}_Focus`,
            localId: `mcp_${stamp}`,
            enrollmentDate: '2024-09-01',
            nextReviewDate: null
          };
          const create = await fetch('https://localhost:7140/api/students', { method: 'POST', headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token }, body: JSON.stringify(payload) });
          if (!create.ok) throw new Error('Failed to seed student');
          const data = await create.json();
          const id = String(data.id ?? data);
      window.__seed = { id, displayName: payload.firstName + ' ' + payload.lastName, localId: payload.localId };
      return window.__seed;
        }
  - navigate: "{{config.baseUrl}}/students"
  - waitFor:
      selector: 'h2'
      text: 'Students'
  - evaluate:
    script: |
    () => {
      const table = document.querySelector('table.table');
      if (!table) throw new Error('Students table not found');
      const link = table.querySelector('tbody tr a.btn');
      if (!link) throw new Error('Open link not found');
      link.click();
      return true;
    }
  - waitFor:
    selector: '.sidebar a.active'
    text: 'Info'
  - clickText:
      selector: '.sidebar a'
      text: 'Assignments'
  - waitFor:
      selector: 'h2'
      text: 'Assignments'
  - clickText:
      selector: '.sidebar a'
      text: 'Goals'
  - waitFor:
      selector: 'h2'
      text: 'Goals'
  - clickText:
      selector: '.sidebar a'
      text: 'Progress'
  - waitFor:
      selector: 'h2'
      text: 'Progress'
  - clickText:
      selector: '.sidebar a'
      text: 'Info'
  - screenshot:
      name: 'students-journey'
      fullPage: true
